library(shiny); runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
knitr::opts_chunk$set(echo = TRUE)
x<-seq(1,20)
y<-exp(-1+x)
df_exp<-data.frame(x,y)
ggplot(df_exp,aes(x=x,y=y))+geom_point()
x<-seq(1,20)
y<-1+x^2
df_quad<-data.frame(x,y)
ggplot(df_quad,aes(x=x,y=y))+geom_point()
x<-seq(1,20)
y<-1/(1+x)
df_recip<-data.frame(x,y)
ggplot(df_recip,aes(x=x,y=y))+geom_point()
x<-seq(1,20)
y<-1+2*log(x)
df_log<-data.frame(x,y)
ggplot(df_log,aes(x=x,y=y))+geom_point()
a<-seq(1,100)
x<-log(a)
y=log(x)
df_power<-data.frame(x,y)
ggplot(df_power,aes(x,exp(log(y))))+geom_point()
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('~/GitHub/data_vis_final/mastering_shiny_tutorial/mastering_shiny_files/apps/basic_ui_ch2/input_types_app.R')
runApp('~/GitHub/data_vis_final/regression_decision_tree/regression_app/app_with_tabs_frame.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(car)
library(ggResidpanel)
nyc<-read.csv(here('data','nyc.csv'))
shapiro.test(nyc$Price)
library(dlookr)
dlookr::plot_correlate(nyc)
library(tidyverse)
library(here)
nyc<-read.csv(here('data','nyc.csv'))%>%select(-c(Case,Restaurant))
lm.list=list()
lm.list[["lm.base"]]<-lm(Price~.,data=nyc)
summary(lm.list[["lm.base"]])
library(regclass)
regclass::VIF(lm.list[['lm.base']])
ggResidpanel::resid_xpanel(lm.list[['lm.base']])
car::powerTransform(nyc%>%select(-c(Price,East)))
ggplot(nyc,aes(x=Decor,y=Price))+geom_point()+geom_smooth(method='loess',se=FALSE,color='blue')+geom_smooth(method='lm',color='red')
library(lmtest)
lmtest::bptest(lm.list[['lm.base']])
library(regclass)
regclass::VIF(lm.list[['lm.base']])
lm.list[['lm.transform']]<-update(lm.list[['lm.base']],~.+I(Decor)^2)
#summary(lm.list[['lm.transform']])
library(leaps)
max_model_variable=4
best_subset<-leaps::regsubsets(Price~.,data=nyc,nvmax=max_model_variable)
results<-summary(best_subset)
tibble(predictors = 1:max_model_variable,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
paste('best adjR2: ',which.max(results$adjr2),"best BIC: ",which.min(results$bic),"best Cp: ",which.min(results$bic))
# 2 variable model
coef(best_subset,2)
lm.list[['lm.best']]<-lm(Price~Food+Decor,data=nyc)
library(regclass)
regclass::VIF(lm.list[['lm.base']])
AICs<-do.call(AIC,unname(lm.list))$AIC
adjr2<-lapply(X=lm.list,
FUN=function(x) unlist(summary(x)$adj.r.squared))
(select_df<-data.frame(Models=names(lm.list),AIC=round(AICs,2), R2=round(unlist(unname(adjr2)),2)))
library(tidyverse)
library(here)
nyc<-read.csv(here('data','nyc.csv'))%>%select(-c(Case,Restaurant))
lm.list=list()
lm.list[["lm.base"]]<-lm(Price~.,data=nyc)
summary(lm.list[["lm.base"]])
library(regclass)
regclass::VIF(lm.list[['lm.base']])
ggResidpanel::resid_xpanel(lm.list[['lm.base']])
car::powerTransform(nyc%>%select(-c(Price,East)))
ggplot(nyc,aes(x=Decor,y=Price))+geom_point()+geom_smooth(method='loess',se=FALSE,color='blue')+geom_smooth(method='lm',color='red')
library(lmtest)
lmtest::bptest(lm.list[['lm.base']])
library(regclass)
regclass::VIF(lm.list[['lm.base']])
lm.list[['lm.transform']]<-update(lm.list[['lm.base']],~.+I(Decor)^2)
#summary(lm.list[['lm.transform']])
library(leaps)
max_model_variable=4
best_subset<-leaps::regsubsets(Price~.,data=nyc,nvmax=max_model_variable)
results<-summary(best_subset)
tibble(predictors = 1:max_model_variable,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
paste('best adjR2: ',which.max(results$adjr2),"best BIC: ",which.min(results$bic),"best Cp: ",which.min(results$bic))
# 2 variable model
coef(best_subset,2)
lm.list[['lm.best']]<-lm(Price~Food+Decor,data=nyc)
library(regclass)
regclass::VIF(lm.list[['lm.base']])
AICs<-do.call(AIC,unname(lm.list))$AIC
adjr2<-lapply(X=lm.list,
FUN=function(x) unlist(summary(x)$adj.r.squared))
(select_df<-data.frame(Models=names(lm.list),AIC=round(AICs,2), R2=round(unlist(unname(adjr2)),2)))
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
knitr::opts_chunk$set(echo = TRUE)
library(janitor)
df_mc<-read.csv(here('data','MulticollinearityExample.csv'))%>%janitor::clean_names()
MC.list<-list()
MC.list[['lm.base']]<-lm(femoral_neck~.,data=df_mc)
car::vif(MC.list[['lm.base']])
knitr::opts_chunk$set(echo = TRUE)
library(janitor)
df_mc<-read.csv(here('data','MulticollinearityExample.csv'))%>%janitor::clean_names()
MC.list<-list()
MC.list[['lm.base']]<-lm(femoral_neck~.,data=df_mc)
car::vif(MC.list[['lm.base']])
knitr::opts_chunk$set(echo = TRUE)
library(janitor)
df_mc<-read.csv(here('data','MulticollinearityExample.csv'))%>%janitor::clean_names()
MC.list<-list()
MC.list[['lm.base']]<-lm(femoral_neck~.,data=df_mc)
car::vif(MC.list[['lm.base']])
View(MC.list)
MC.list[['lm.base']]
summary(MC.list[['lm.base']])
knitr::opts_chunk$set(echo = TRUE)
library(janitor)
library(car)
df_mc<-read.csv(here('data','MulticollinearityExample.csv'))%>%janitor::clean_names()
MC.list<-list()
MC.list[['lm.base']]<-lm(femoral_neck~.,data=df_mc)
car::vif(MC.list[['lm.base']])
vif(MC.list[['lm.base']])
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
library(leaps)
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(here)
library(car)
library(ggResidpanel)
nyc<-read.csv(here('data','nyc.csv'))
shapiro.test(nyc$Price)
library(dlookr)
dlookr::plot_correlate(nyc)
library(tidyverse)
library(here)
nyc<-read.csv(here('data','nyc.csv'))%>%select(-c(Case,Restaurant))
lm.list=list()
lm.list[["lm.base"]]<-lm(Price~.,data=nyc)
summary(lm.list[["lm.base"]])
library(regclass)
regclass::VIF(lm.list[['lm.base']])
ggResidpanel::resid_xpanel(lm.list[['lm.base']])
car::powerTransform(nyc%>%select(-c(Price,East)))
ggplot(nyc,aes(x=Decor,y=Price))+geom_point()+geom_smooth(method='loess',se=FALSE,color='blue')+geom_smooth(method='lm',color='red')
library(lmtest)
lmtest::bptest(lm.list[['lm.base']])
library(regclass)
regclass::VIF(lm.list[['lm.base']])
lm.list[['lm.transform']]<-update(lm.list[['lm.base']],~.+I(Decor)^2)
#summary(lm.list[['lm.transform']])
library(leaps)
max_model_variable=4
best_subset<-leaps::regsubsets(Price~.,data=nyc,nvmax=max_model_variable)
results<-summary(best_subset)
tibble(predictors = 1:max_model_variable,
adj_R2 = results$adjr2,
Cp = results$cp,
BIC = results$bic) %>%
gather(statistic, value, -predictors) %>%
ggplot(aes(predictors, value, color = statistic)) +
geom_line(show.legend = F) +
geom_point(show.legend = F) +
facet_wrap(~ statistic, scales = "free")
paste('best adjR2: ',which.max(results$adjr2),"best BIC: ",which.min(results$bic),"best Cp: ",which.min(results$bic))
# 2 variable model
coef(best_subset,2)
lm.list[['lm.best']]<-lm(Price~Food+Decor,data=nyc)
library(regclass)
regclass::VIF(lm.list[['lm.base']])
AICs<-do.call(AIC,unname(lm.list))$AIC
adjr2<-lapply(X=lm.list,
FUN=function(x) unlist(summary(x)$adj.r.squared))
(select_df<-data.frame(Models=names(lm.list),AIC=round(AICs,2), R2=round(unlist(unname(adjr2)),2)))
results
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
runApp('app_with_tabs_frame.R')
